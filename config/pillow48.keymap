#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/pointing.h>


#define BASE 0
#define MODS 1
#define FUNC 2
#define SYM1 3
#define SYM2 4
#define MOUSE1 5
#define MOUSE2 6
#define NUM 7
#define FLIP 8
#define PUNC 9

/ {
    keymap {
        compatible = "zmk,keymap";
        BASE {
            display-name = "Base";
            bindings = <
            &kp N1  &kp N2  &kp N3  &kp N4  &kp N5          &kp N8   &kp N9   &kp N0   &kp MINUS     
&kp TAB     &kp Q   &kp W   &kp E   &kp R   &kp T           &kp Y    &kp U    &kp I    &kp O    &kp P    
&mo 3       &kp A   &kp S   &kp D   &kp F   &kp G           &kp H    &kp J    &kp K    &kp L    &kp SINGLE_QUOTE
&kp LSHFT   &tog 8  &kp Z   &kp X   &kp C   &kp V           &kp B    &kp N    &kp M    &tog 8   &to 0
                        &ht_num 7 7 &kp SPC &mo 1           &mo 7    &kp SPC  &mo 2      
            >;            
        };

        MODS {
            display-name = "Mods and Navigation";
            bindings = <
       &kp ESC      &kp UP   &kp LEFT   &kp RIGHT   &kp DOWN                    &kp LC(BSPC)    &kp BSPC    &kp DEL     &kp LC(DEL)
&kp LA(TAB) &sk LCTRL   &sk LSHFT   &sk LALT    &kp T       &kp BSPC            &kp C_AC_BACK   &mkp MCLK   &kp UP      &mkp RCLK    &kp C_AC_FORWARD    
&sl 2    &kp LC(A)   &kp LC(S)   &sk LGUI    &kp LC(F)   &kp ENTER           &mkp LCLK       &kp LEFT    &kp DOWN    &kp RIGHT       &kp ENTER
&kp CAPS    &kp LC(Y)   &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)           &kp LC(PG_UP)  &kp HOME    &kp END     &kp LC(PG_DN)   &kp DOT  
                                    &trans      &kp LG(SPC) &trans              &trans          &trans      &trans  
            >;  
        };
//sl: sticky layer, same function with one shot layer

        FUNC { //one shot layer
            display-name = "FN keys and mostly unused symbols";
            bindings = <
    &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3  &bt BT_CLR            &trans      &trans      &trans      &trans                                  
&kp F12     &kp F11     &kp F2      &kp F8      &kp F4      &kp F5              &kp SCROLLLOCK  &trans      &trans      &trans      &trans    
&sl 9    &trans      &trans      &trans      &trans      &trans              &kp INS         &kp PG_UP   &kp PG_DN   &kp PSCRN   &kp KP_NUMLOCK      
&kp F1      &kp F3      &kp F6      &kp F7      &kp F9      &kp F10             &trans          &trans      &trans      &trans      &trans
                                    &trans      &trans      &trans              &trans          &trans      &trans     
            >;
        };

        SYM1 {
            display-name = "Frequent Symbols";
            bindings = <
        &trans  &trans    &trans   &trans   &trans                                              &kp STAR        &kp LPAR    &kp RPAR        &kp UNDERSCORE     
&kp LA(SPC) &mo 4        &mo 5      &trans          &kp T          &trans              &kp SEMICOLON   &kp SLASH   &kp QUESTION    &kp LEFT_BRACKET    &kp RIGHT_BRACKET     
&trans      &trans          &trans          &trans          &kp G          &trans              &kp AMPS        &kp COMMA   &kp DOT         &kp COLON           &kp DOUBLE_QUOTES
&trans      &kp C_BRI_DN    &kp C_BRI_UP    &kp C_VOL_DN    &kp C_VOL_UP    &kp C_MUTE          &kp TILDE       &kp GRAVE   &trans          &trans              &trans
                                            &trans          &trans          &trans              &trans          &trans      &trans    
            >;
        };

        SYM2 { //CAPS_ONlY
            display-name = "Less Frequent Symbols";
            bindings = <
        &trans  &trans  &trans  &trans  &trans              &kp BACKSLASH   &kp DLLR        &kp EQUAL           &kp PLUS     
&trans  &trans  &trans  &trans  &trans  &trans              &kp PIPE    &kp AT          &kp HASH            &kp LEFT_BRACE  &kp RIGHT_BRACE   
&trans  &trans  &trans  &trans  &trans  &trans              &kp EXCL    &kp LESS_THAN   &kp GREATER_THAN    &kp PRCNT       &kp CARET
&trans  &trans  &trans  &trans  &trans  &trans              &trans      &trans          &trans              &trans          &trans  
                        &trans  &trans  &trans              &sk RALT    &sk RSHFT       &sk RCTRL    
            >;
        };

        MOUSE1 { //CAPS_W
            display-name = "Slow Mouse";
            bindings = <
    &trans  &trans  &trans    &trans        &trans          &msc MOVE_Y(50)    &msc MOVE_Y(20)   &msc MOVE_Y(-20)   &msc MOVE_Y(-50)     
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &mkp MCLK           &mmv MOVE_Y(-250)   &mkp RCLK           &trans    
&trans  &trans  &trans  &trans  &trans      &trans          &mkp LCLK   &mmv MOVE_X(-250)   &mmv MOVE_Y(250)    &mmv MOVE_X(250)    &trans
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &msc MOVE_X(-20)    &msc MOVE_X(20)     &trans              &trans  
                        &trans  &mo 6       &trans          &trans      &trans              &trans    
            >;
        };

        MOUSE2 { //CAPS_W
            display-name = "Fast Mouse";
            bindings = <
    &trans  &trans  &trans    &trans        &trans          &msc MOVE_X(-50)    &msc MOVE_Y(150)   &msc MOVE_Y(-150)   &msc MOVE_X(50)     
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &mkp MCLK           &mmv MOVE_Y(-1000)  &mkp RCLK           &trans    
&trans  &trans  &trans  &trans  &trans      &trans          &mkp LCLK   &mmv MOVE_X(-1000)  &mmv MOVE_Y(1000)   &mmv MOVE_X(1000)   &trans
&trans  &trans  &trans  &trans  &trans      &trans          &trans      &trans              &trans              &trans              &trans
                        &trans  &trans      &trans          &trans      &trans              &trans    
            >;
        };

        NUM { //this layer should be mapped to a layer-tap behavior, tap to &tog (fixed use case), hold to &mo
            display-name = "Numpad";
            bindings = <
                &kp KP_N1   &kp KP_N2       &kp KP_N3       &kp KP_N4       &trans                  &kp KP_N1   &kp KP_N2       &kp KP_N3           &kp KP_N4       
&kp LC(PLUS)    &kp KP_N5   &kp KP_N6       &kp KP_N7       &kp KP_N8       &kp BSPC               &kp KP_N5   &kp KP_N6       &kp KP_N7           &kp KP_N8       &kp BSPC       
&kp LC(MINUS)   &kp KP_N9   &kp KP_N0       &kp KP_COMMA    &kp KP_DOT      &kp ENTER               &kp KP_N9   &kp KP_N0       &kp KP_COMMA        &kp KP_DOT      &kp ENTER 
&kp LSHFT       &kp KP_PLUS &kp KP_MINUS    &kp KP_MULTIPLY &kp KP_DIVIDE   &kp KP_EQUAL            &kp KP_PLUS &kp KP_MINUS    &kp KP_MULTIPLY     &kp KP_DIVIDE   &kp KP_EQUAL   
                                            &trans          &trans          &trans                  &trans      &trans          &trans
            >;
        };

        FLIP {
            display-name = "Left";
            bindings = <
        &kp N8  &kp N9  &kp N0  &kp MINUS   &kp COMMA                   &kp N1  &kp N2   &kp N3  &kp N4                             
&trans  &kp U   &kp I   &kp O   &kp P       &kp Y                       &kp Q   &kp W    &kp E   &kp R   &kp T   
&trans  &kp J   &kp K   &kp L   &kp H       &kp SINGLE_QUOTE            &kp A   &kp S    &kp D   &kp F   &kp G     
&trans  &trans  &kp B   &kp N   &kp M       &kp DOT                     &kp Z   &kp X    &kp C   &kp V   &trans
                        &trans  &trans      &trans                      &trans  &trans   &trans
            >;
        };
 
        PUNC {
            display-name = "One Hand Mode: Punctuations and Symbols";
// 
// |       |  !  |  @  |  #   |  $   |  %   |                         |  x  |  x   |  x   |  x  | 
// |   `   |  ^  |  &  |  (   |  )   |  _   |                   |  x   |  x    |  x    |  x   |   x   |
// | CAPS  |  ;  |  :  |  "   |  [   |  ]   |                   |  x   |  x    |  x    |  x   |   x   | 
// | SHFT  |  {  |  }  |  <   |  >   |  \   |        |  |       |  x   |  x    |  x    |  x   |   x   |

            bindings = <
        &kp EXCL        &kp AT          &kp HASH            &kp DLLR            &kp PRCNT               &trans  &trans  &trans  &trans      
&trans  &kp CARET       &kp AMPS        &kp LPAR            &kp RPAR            &kp UNDERSCORE          &trans  &trans  &trans  &trans  &trans       
&trans  &kp SEMICOLON   &kp COLON       &kp DOUBLE_QUOTES   &kp LEFT_BRACKET    &kp RIGHT_BRACKET       &trans  &trans  &trans  &trans  &trans            
&trans  &kp LEFT_BRACE  &kp RIGHT_BRACE &kp LESS_THAN       &kp GREATER_THAN    &kp BACKSLASH           &trans  &trans  &trans  &trans  &trans       
                                        &trans              &trans              &trans                  &trans  &trans  &trans
            >;
        };
    }; 

    behaviors {
        ht_num: hold_tap_num {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_NUM";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&tog>;
        };
    };

//   0   1   2   3   4                27  28  29  30  31
// 5   6   7   8   9   10           32  33  34  35  36
// 11  12  13  14  15  16            37  38  39  40  41
// 17  18  19  20  21  22           42  43  44  45  46
//     23  24      25  26           47  48  49

    combos {
        compatible = "zmk,combos";
        combo_LCTRL {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp LCTRL>;
        };
        combo_LSHFT {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp LSHFT>;
        };
        combo_LALT {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp LALT>;
        };           
        combo_LGUI {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp LGUI>;
        };
        combo_reset_left {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&bootloader>;
        };               
        combo_reset_right {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&bootloader>;
        }; 
    };
};